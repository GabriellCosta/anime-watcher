apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-kapt"
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    signingConfigs {
        release {
            keyAlias 'animewatcher'
            keyPassword project.properties.get("keyPassword", 'no pass here')
            storeFile rootProject.file('./keystore')
            storePassword project.properties.get("storePassword", 'hehehe')
        }
    }
    compileSdkVersion 27
    buildToolsVersion "27.0.2"
    defaultConfig {
        applicationId "brunodles.animewatcher"
        minSdkVersion Integer.parseInt(project.properties.get("minSdk", "14"))
        targetSdkVersion 27
        versionCode Integer.parseInt(project.properties.get("versionCode", "1"))
        versionName project.properties.get("versionName", "1.0.0")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        buildConfigField "Boolean", "IMAGE_LOADER_LOGGGIN_ENABLED", project.properties.get("image_log", "false")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation project(':decoders:animacurse')
    implementation project(':decoders:animakai')
    implementation project(':decoders:animesonlinebr')
    implementation project(':decoders:animesorion')
    implementation project(':decoders:animesproject')
    implementation project(':decoders:anitubex')
    implementation project(':decoders:onepiecex')
    implementation project(":decoders:xvideos")

    kapt "com.android.databinding:compiler:$plugin_version"

    implementation 'com.brunodles:googleimagesapi:2.0.0'
    api 'com.brunodles:environmentmods-annotation:0.2.0'
    annotationProcessor 'com.brunodles:environmentmods-processor:0.2.0'
    kapt 'com.brunodles:environmentmods-processor:0.2.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation 'com.android.support:multidex:1.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:support-annotations:$support_libs_version"
    implementation "com.android.support:appcompat-v7:$support_libs_version"
    implementation "com.android.support:palette-v7:$support_libs_version"
    implementation "com.android.support:recyclerview-v7:$support_libs_version"
    implementation "com.android.support:design:$support_libs_version"
    implementation "com.android.support:cardview-v7:$support_libs_version"
    implementation "com.android.support:mediarouter-v7:$support_libs_version"
    implementation "com.android.support:support-vector-drawable:$support_libs_version"

    implementation "com.google.firebase:firebase-core:$playservices_version"
    implementation "com.google.firebase:firebase-database:$playservices_version"
    implementation "com.google.firebase:firebase-crash:$playservices_version"
    implementation "com.google.firebase:firebase-auth:$playservices_version"

    implementation 'com.firebaseui:firebase-ui-database:3.1.2'

    implementation "com.google.android.gms:play-services-auth:$playservices_version"
    implementation "com.google.android.gms:play-services-cast-framework:$playservices_version"
    implementation 'com.google.android.exoplayer:exoplayer:r2.4.1'

    // Using lite version, since full version does not work on devices API 24+. Also does not support google cast.
    implementation 'com.connectsdk:connect-sdk-android-lite:1.6.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.3'

    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    debugImplementation 'com.github.anrwatchdog:anrwatchdog:1.3.0'

    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'

    testImplementation 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

configurations.all { config ->
    if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

task googleServicesEncrypt(type: Exec) {
    description "Encrypt 'google-services.json' using 'KEY' environement variable."
    workingDir project.projectDir
    commandLine "openssl aes-256-cbc -k \"\$KEY\" -in google-services.json -out google-services.json.enc".split(" ")
}

task googleServicesDecrypt(type: Exec) {
    description "Decrypt 'google-services.json' using 'KEY' environement variable."
    workingDir project.projectDir
    commandLine "openssl aes-256-cbc -d -k \"\$KEY\" -in google-services.json.enc -out google-services.json".split(" ")
}

apply plugin: 'com.google.gms.google-services'